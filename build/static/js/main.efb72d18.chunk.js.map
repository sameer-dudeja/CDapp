{"version":3,"sources":["components/context.js","components/Modal.js","components/timer.js","pages/Home.js","data.js","assets/logo.svg","components/Navbar.js","pages/Posts.js","customHooks/useFetch.js","pages/Error.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","isModalOpen","setIsModalOpen","status","setStatus","Provider","value","openModal","closeModal","console","log","stopTimers","resume","useGlobalContext","useContext","Modal","checked","setChecked","other","setOther","className","Form","Check","type","name","id","label","onChange","e","Control","as","placeholder","rows","Button","style","backgroundColor","color","borderColor","onClick","App","counterSecond","setCounterSecond","counterMinute","setCounterMinute","useEffect","counterId","setTimeout","clearTimeout","Home","links","url","text","icon","Navbar","showLinks","setShowLinks","linksContainerRef","useRef","linksRef","linksHeight","current","getBoundingClientRect","height","src","logo","alt","ref","map","link","href","Posts","posts","loading","setLoading","setPosts","a","fetch","response","json","getPosts","useFetch","dataLength","length","hasMore","loader","width","timeout","endMessage","textAlign","title","body","Error","to","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efb72d18.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react'\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [status, setStatus] = useState('working')\n  const openModal = () => {\n    setIsModalOpen(true)\n  }\n  const closeModal = () => {\n    console.log()\n    setIsModalOpen(false)\n  }\n  const stopTimers = () => {\n    setStatus('paused')\n  }\n  const resume = () => {\n    setStatus('working')\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        isModalOpen,\n        openModal,\n        closeModal,\n        status,\n        stopTimers,\n        resume,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import { useState } from 'react'\nimport { useGlobalContext } from './context'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\nconst Modal = () => {\n  const btnStyleCancel = {\n    color: '#ff5a43',\n    borderColor: '#ff5a43',\n    backgroundColor: 'white',\n  }\n  const btnStyleEnd = {\n    backgroundColor: '#ff5a43',\n    color: 'white',\n    borderColor: '#ff5a43',\n  }\n  const { isModalOpen, closeModal } = useGlobalContext()\n  const [checked, setChecked] = useState(false)\n  const { stopTimers, resume } = useGlobalContext()\n  // const [formData, setformData] = useState({\n  //   isInterrupted: 'false',\n  //   reason: '',\n  // })\n  const [other, setOther] = useState(false)\n  const handleChange = (e) => {\n    // const target = e.target\n    // const name = target.name\n    // const value = target.type === 'checkbox' ? target.checked : target.value\n    // setformData({\n    //   ...formData,\n    //   reason: value,\n    // })\n    setChecked(!checked)\n  }\n  const handleOther = () => {\n    setOther(!other)\n  }\n  return (\n    <div\n      className={`${\n        isModalOpen ? 'modal-overlay show-modal' : 'modal-overlay'\n      }`}\n    >\n      <div className='modal-container'>\n        <Form className='form'>\n          <Form.Check\n            className='checkbox'\n            type='checkbox'\n            name='classCompleted'\n            id='classCompleted'\n            label='Class Completed'\n          />\n          <Form.Check\n            className='checkbox'\n            type='checkbox'\n            name='classInterrupted'\n            id='classInterrupted'\n            label='Class Interrupted'\n            checked={checked}\n            onChange={handleChange}\n          />\n          {checked && (\n            <div className='secOptions'>\n              <Form.Check\n                className='checkbox'\n                type='checkbox'\n                id='Absent'\n                name='Absent'\n                label='Student didnt show up for class'\n              />\n              <Form.Check\n                className='checkbox'\n                type='checkbox'\n                id='Interest'\n                name='Interest'\n                label='Student didnt show any interest'\n              />\n              <Form.Check\n                className='checkbox'\n                type='checkbox'\n                id='Disconnect'\n                name='Disconnect'\n                label='Student got disconnected'\n              />\n              <Form.Check\n                className='checkbox'\n                type='checkbox'\n                id='Disconnect2'\n                name='Disconnect2'\n                label='I got disconnected'\n              />\n              <Form.Check\n                className='checkbox'\n                type='checkbox'\n                id='Other'\n                name='Other'\n                label='Other Reason'\n                onChange={handleOther}\n              />\n              {other && (\n                <div>\n                  <Form.Control\n                    as='textarea'\n                    placeholder='Other Reasons'\n                    rows={3}\n                  />\n                </div>\n              )}\n            </div>\n          )}\n          <Button\n            style={btnStyleEnd}\n            onClick={() => {\n              closeModal()\n              stopTimers()\n            }}\n          >\n            End Class\n          </Button>\n          <Button\n            style={btnStyleCancel}\n            onClick={() => {\n              closeModal()\n              resume()\n            }}\n          >\n            Cancel\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React, { useState, useEffect } from 'react'\r\nimport { useGlobalContext } from './context'\r\nexport default function App() {\r\n  const [counterSecond, setCounterSecond] = useState(0)\r\n  const [counterMinute, setCounterMinute] = useState(10)\r\n  const { status } = useGlobalContext()\r\n\r\n  useEffect(() => {\r\n    let counterId\r\n    if (status === 'working') {\r\n      counterId = setTimeout(() => {\r\n        if (counterSecond > 0) {\r\n          setCounterSecond(counterSecond - 1)\r\n        }\r\n        if (counterSecond === 0)\r\n          if (counterMinute > 0) {\r\n            setCounterMinute(counterMinute - 1)\r\n            setCounterSecond(59)\r\n          }\r\n      }, 1000)\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(counterId)\r\n    }\r\n  }, [counterSecond, status, counterMinute])\r\n  return (\r\n    <div className='App'>\r\n      <div>\r\n        <h3>\r\n          {counterMinute}:{counterSecond}\r\n        </h3>\r\n      </div>\r\n      {/* <div>time: {time} </div>\r\n      <button onClick={handletimer}>Submit</button>\r\n      <button onClick={stopTimers}>Stop</button>\r\n      <button onClick={resume}>resume</button> */}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport { useGlobalContext } from '../components/context'\nimport Timer from '../components/timer'\nconst Home = () => {\n  const { openModal, stopTimers } = useGlobalContext()\n  return (\n    <>\n      <div className='classBar'>\n        <div className='classbar-name'>\n          <h3>Trial Lesson [Grade 1-3] </h3>\n        </div>\n        <div className='classbar-time'>\n          <Timer />\n        </div>\n        <div className='classbar-btn-div'>\n          <button\n            onClick={() => {\n              openModal()\n              stopTimers()\n            }}\n            className='btn1'\n          >\n            End Class\n          </button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport {\n  FaHome,\n  FaUserFriends,\n  FaFolderOpen,\n  FaCalendarAlt,\n  FaWpforms,\n} from 'react-icons/fa'\nexport const links = [\n  {\n    id: 1,\n    url: '/',\n    text: 'home',\n    icon: <FaHome />,\n  },\n  {\n    id: 2,\n    url: '/team',\n    text: 'team',\n    icon: <FaUserFriends />,\n  },\n  {\n    id: 3,\n    url: '/projects',\n    text: 'projects',\n    icon: <FaFolderOpen />,\n  },\n  {\n    id: 4,\n    url: '/calendar',\n    text: 'calendar',\n    icon: <FaCalendarAlt />,\n  },\n  {\n    id: 5,\n    url: '/posts',\n    text: 'posts',\n    icon: <FaWpforms />,\n  },\n]\n","export default __webpack_public_path__ + \"static/media/logo.b492dcc3.svg\";","import React, { useState, useRef, useEffect } from 'react'\nimport { FaBars } from 'react-icons/fa'\nimport { links } from '../data'\nimport logo from '../assets/logo.svg'\n\nconst Navbar = () => {\n  const [showLinks, setShowLinks] = useState(false)\n  const linksContainerRef = useRef(null)\n  const linksRef = useRef(null)\n  const toggleLinks = () => {\n    setShowLinks(!showLinks)\n  }\n  useEffect(() => {\n    const linksHeight = linksRef.current.getBoundingClientRect().height\n    if (showLinks) {\n      linksContainerRef.current.style.height = `${linksHeight}px`\n    } else {\n      linksContainerRef.current.style.height = '0px'\n    }\n  }, [showLinks])\n  return (\n    <nav>\n      <div className='nav-center'>\n        <div className='nav-header'>\n          <img src={logo} className='logo' alt='logo' />\n          <button className='nav-toggle' onClick={toggleLinks}>\n            <FaBars />\n          </button>\n        </div>\n        <div className='links-container' ref={linksContainerRef}>\n          <ul className='links' ref={linksRef}>\n            {links.map((link) => {\n              const { id, url, text } = link\n              return (\n                <li key={id}>\n                  <a href={url}>{text}</a>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { useFetch } from '../customHooks/useFetch'\r\nconst url = 'http://jsonplaceholder.typicode.com/posts/?_limit=10'\r\n\r\nconst Posts = () => {\r\n  const { posts } = useFetch(url)\r\n  return (\r\n    <>\r\n      <article className='posts'>\r\n        <h2>Posts</h2>\r\n        <br />\r\n\r\n        <InfiniteScroll\r\n          dataLength={posts.length}\r\n          hasMore={true}\r\n          loader={\r\n            <div className='loader'>\r\n              <Loader\r\n                type='Oval'\r\n                color='#FF5A43'\r\n                height={80}\r\n                width={80}\r\n                timeout={3000}\r\n              />\r\n            </div>\r\n          }\r\n          endMessage={\r\n            <p style={{ textAlign: 'center' }}>\r\n              <b>Yay! You have seen it all</b>\r\n            </p>\r\n          }\r\n        >\r\n          <ul>\r\n            {posts.map((posts) => {\r\n              const { id, title, body } = posts\r\n              return (\r\n                <li key={id}>\r\n                  <div>\r\n                    <h4>{title}</h4>\r\n                    <p>{body}</p>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </InfiniteScroll>\r\n      </article>\r\n    </>\r\n  )\r\n}\r\nPosts.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  body: PropTypes.string.isRequired,\r\n}\r\nexport default Posts\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useFetch = (url) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      const response = await fetch(url)\r\n      const posts = await response.json()\r\n      setPosts(posts)\r\n      setLoading(false)\r\n    }\r\n    getPosts()\r\n  }, [url])\r\n  return { loading, posts }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst Error = () => {\r\n  return (\r\n    <div className='error'>\r\n      <br />\r\n      <h1>404</h1>\r\n      <h2>Page Not Found</h2>\r\n      <br />\r\n\r\n      <Link to='/' className='btn1'>\r\n        Back Home\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\nimport Modal from './components/Modal'\nimport Home from './pages/Home'\nimport Navbar from './components/Navbar'\nimport Posts from './pages/Posts'\nimport Error from './pages/Error'\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n            <Modal />\n          </Route>\n          <Route path='/posts'>\n            <Posts />\n          </Route>\n          <Route path='*'>\n            <Error />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './App'\nimport { AppProvider } from './components/context'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}